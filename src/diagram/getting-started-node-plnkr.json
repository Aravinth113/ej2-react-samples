{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-spreadsheet\": \"syncfusion:ej2-spreadsheet/dist/ej2-spreadsheet.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-spreadsheet\": \"syncfusion:ej2-react-spreadsheet/dist/ej2-react-spreadsheet.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>{{:title}}</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"{{:meta}}\">    \r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link rel=\"shortcut icon\" href=\"https://ej2.syncfusion.com/home/favicon.ico\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link rel=\"canonical\" href=\"https://ej2.syncfusion.com/react/demos/{{:canonical}}\"/>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb  h1{\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n            margin: 0;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n        .layout {\r\n            display:inline-block;\r\n            cursor: pointer;\r\n        }\r\n        #actionDes {\r\n            opacity: 0.75;\r\n        }\r\n/*sb-icons declaration*/\r\n\r\n@font-face {\r\n    font-family: 'sbicons';\r\n      src: url(data:font/truetype;charset=utf-8;base64,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) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n.sb-icons {\r\n    font-family: 'sbicons';\r\n    speak: none;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-variant: normal;\r\n    text-transform: none;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.sb-icon-Next:before {\r\n    content: '\\e91b';\r\n}\r\n\r\n.sb-icon-Previous:before {\r\n    content: '\\e91f';\r\n}\r\n\r\n#next-sample,\r\n#prev-sample {\r\n    font-size: 18px;\r\n    border: 0.5px solid#E5E5E5;\r\n    background: #FFFFFF;\r\n    display: inline-table;\r\n    padding: 2px 5px 0px 5px;\r\n}\r\n\r\n.sb-navigation-next a, .sb-navigation-prev a{\r\n    color: #636363;\r\n    text-decoration: none;\r\n}\r\n\r\n#prev-sample {\r\n    border-radius: 4px 0px 0px 4px;\r\n}\r\n\r\n#next-sample {\r\n    border-radius: 0px 4px 4px 0px;\r\n    float: right;\r\n}\r\n\r\n#next-sample:hover,\r\n#prev-sample:hover{\r\nbackground-color: #D8D8D8;\r\ntext-decoration: none; \r\n}\r\n\r\n.sb-sample-navigation {\r\n    font-size: 18px;\r\n    color: #5a5a5a;\r\n    cursor: pointer;\r\n}\r\n\r\n.sb-custom-item {\r\n    padding-right: 15px;\r\n    padding-left: 30px;\r\n    display: inline-table;\r\n    padding-top: 20px;\r\n}\r\n\r\na.e-disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.35;\r\n}\r\n\r\n\r\n@media (max-width: 550px) {\r\n        \r\n        .sb-headers {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n        .sb-header {\r\n            display: none;\r\n        }\r\n        .syncfusion-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 8px;\r\n        }\r\n        .sync-logo {\r\n            padding-right: 0px;\r\n            padding-left: 8px;\r\n            background: url(../../styles/images/SyncfusionLogo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 40px;\r\n        }\r\n        .sb-icon-notification {\r\n            padding-left: 15px;\r\n            padding-right: 15px;\r\n            font-size: 18px;\r\n            transform: rotate(-180deg);\r\n            color: #5D5D5D;\r\n            opacity: 100%;\r\n        }\r\n        #sb-header-text {\r\n            padding-left: 0%;\r\n        }\r\n    \r\n        .sb-icon-notification:before {\r\n            content: \"\\ea08\";\r\n        }\r\n    \r\n        .product a:hover{\r\n        color: #5D5D5D;\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/react-ui-components/{{:header2}}\">PRODUCT TOUR</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/react\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div id='sample-header' class=\"sb-headers\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"syncfusion-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"sync-logo\"></div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <div class='sb-header-right sb-right sb-table'>\r\n                        <div class='sb-header-item sb-table-cell'>\r\n                            <div class=\"product\">\r\n                                <a href=\"https://www.syncfusion.com/react-ui-components/{{:header2}}\">\r\n                                <div class=\"sb-icon-notification sb-icons\"></div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n    \r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                            <div class=\"sb-custom-item sb-sample-navigation sb-right sb-header-right sb-table-cell\">\r\n                                <div id=\"prev-sample\" class=\"sb-navigation-prev e-control e-tooltip \" aria-label=\"previous sample\" title=\"Previous Sample\">\r\n                                    <a {{:anchor-prev}} class='{{:disabled-prev}}'><span class=\"sb-icons sb-icon-Previous\"></span></a>\r\n                            \r\n                                </div>\r\n                                <div id=\"next-sample\" class=\"sb-navigation-next e-control e-tooltip\" aria-label=\"next sample\" title=\"Next Sample\">\r\n                                    <a {{:anchor-next}} class='{{:disabled-next}}'><span class=\"sb-icons sb-icon-Next\"></span></a>\r\n                            \r\n                                </div>\r\n                            </div>\r\n                    <h1 class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos/\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/{{:header2}}/default.html\"><span>{{:header}}</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">{{:header1}}</div>\r\n                    </h1>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            <div class=\"layout\" id=\"actionDes\">{{:action-description}}</div>\r\n                            <a id=\"details\" class=\"layout\" onclick=\"desDetails()\"> More Details...</a>\r\n                            <script>\r\n                                function desDetails() {\r\n                                    var element = document.getElementById('description-section');\r\n                                    if (element) {\r\n                                        element.scrollIntoView();\r\n                                    }\r\n                                }\r\n                            </script>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           {{:description}}\r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <script src=\"./app/index.min.js\"></script>\r\n        <script src=\"../../{{:repoScript}}\"></script> \r\n\r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport {\r\n  DiagramComponent,\r\n  Diagram,\r\n  Inject,\r\n  NodeModel,\r\n  UndoRedo,\r\n  ConnectorModel,\r\n  PointModel,\r\n  NodeConstraints,\r\n  SnapConstraints,\r\n  GradientType,\r\n  ShadowModel,\r\n  GradientModel,\r\n  LinearGradientModel,\r\n  RadialGradientModel\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\nimport { Point } from \"@syncfusion/ej2-diagrams/src/diagram/primitives/point\";\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport {\r\n  CheckBox,\r\n  ChangeEventArgs as CheckBoxChangeEventArgs\r\n} from \"@syncfusion/ej2-react-buttons\";\r\n\r\n//Initializes the nodes for the diagram\r\nlet sdlc: SdlcNodeModel[] = [\r\n  { id: \"sdlc\", text: \"SDLC\" },\r\n  { id: \"analysis\", text: \"Analysis\" },\r\n  { id: \"design\", text: \"Design\" },\r\n  { id: \"implement\", text: \"Implement\" },\r\n  { id: \"deploy\", text: \"Deploy\" },\r\n  { id: \"support\", text: \"Support\" }\r\n];\r\n\r\n//arranges the nodes in a circular path\r\nlet count: number = 5;\r\nlet space: number = 80;\r\nlet radius: number = (count * 100 + space * count) / (2 * Math.PI);\r\nsdlc[0].offsetX = 300;\r\nsdlc[0].offsetY = 300;\r\nlet delta: number = 360 / 5;\r\nlet angle: number = 270;\r\nfor (let i: number = 1; i < 6; i++) {\r\n  let offset: PointModel = Point.transform({ x: 300, y: 300 }, angle, radius);\r\n  sdlc[i].offsetX = offset.x;\r\n  sdlc[i].offsetY = offset.y;\r\n  angle += delta;\r\n}\r\n\r\n//Initializes the connector for the diagram\r\nlet connections: ConnectorModel[] = [];\r\n\r\nfor (let i: number = 1; i < 6; i++) {\r\n  connections.push({ sourceID: sdlc[i].id, targetID: sdlc[(i % 5) + 1].id });\r\n}\r\n\r\nconst SAMPLE_CSS = `.image-pattern-style {\r\n        background-color: white;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        height: 75px;\r\n        width: calc((100% - 12px) / 3);\r\n        cursor: pointer;\r\n        border: 1px solid #D5D5D5;\r\n        background-position: center;\r\n        float: left;\r\n    }\r\n\r\n    .image-pattern-style:hover {\r\n        border-color: gray;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .row {\r\n        margin-left: 0px;\r\n        margin-right: 0px;\r\n    }\r\n\r\n    .row-header {\r\n        font-size: 13px;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .e-selected-style {\r\n        border-color: #006CE6;\r\n        border-width: 2px;\r\n    }\r\n\r\n    .e-checkbox-wrapper .e-label {\r\n        font-size: 12px;\r\n    }`;\r\n\r\nlet diagramInstance: DiagramComponent;\r\nlet node: NodeModel;\r\n\r\nexport class GettingStartedNodes extends SampleBase<{}, {}> {\r\n  rendereComplete() {\r\n    //Click event for Appearance of the Property Panel\r\n    document.getElementById(\"appearance\").onclick = (args: MouseEvent) => {\r\n      let target: HTMLElement = args.target as HTMLElement;\r\n\r\n      let selectedElement: HTMLCollection = document.getElementsByClassName(\r\n        \"e-selected-style\"\r\n      );\r\n      if (selectedElement.length) {\r\n        selectedElement[0].classList.remove(\"e-selected-style\");\r\n      }\r\n      if (target.className === \"image-pattern-style\") {\r\n        for (let i: number = 0; i < diagramInstance.nodes.length; i++) {\r\n          node = diagramInstance.nodes[i];\r\n          switch (target.id) {\r\n            case \"preview0\":\r\n              applyStyle(\r\n                node,\r\n                0,\r\n                undefined,\r\n                ~NodeConstraints.Shadow,\r\n                undefined,\r\n                undefined,\r\n                target\r\n              );\r\n              break;\r\n            case \"preview1\":\r\n              applyStyle(\r\n                node,\r\n                2,\r\n                undefined,\r\n                ~NodeConstraints.Shadow,\r\n                undefined,\r\n                undefined,\r\n                target\r\n              );\r\n              break;\r\n            case \"preview2\":\r\n              applyStyle(\r\n                node,\r\n                2,\r\n                \"5 5\",\r\n                ~NodeConstraints.Shadow,\r\n                undefined,\r\n                undefined,\r\n                target\r\n              );\r\n              break;\r\n            case \"preview3\":\r\n              applyStyle(\r\n                node,\r\n                2,\r\n                \"5 5\",\r\n                ~NodeConstraints.Shadow,\r\n                \"Radial\",\r\n                undefined,\r\n                target\r\n              );\r\n              break;\r\n            case \"preview4\":\r\n              let shadow: ShadowModel = {\r\n                angle: 45,\r\n                distance: 15,\r\n                opacity: 0.3,\r\n                color: \"grey\"\r\n              };\r\n              applyStyle(\r\n                node,\r\n                2,\r\n                \"5 5\",\r\n                NodeConstraints.Shadow,\r\n                undefined,\r\n                shadow,\r\n                target\r\n              );\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"control-pane\">\r\n        <style>{SAMPLE_CSS}</style>\r\n        <div className=\"col-lg-8 control-section\">\r\n          <div className=\"content-wrapper\" style={{ width: \"100%\" }}>\r\n            <DiagramComponent\r\n              id=\"diagram\"\r\n              ref={diagram => (diagramInstance = diagram)}\r\n              width={\"100%\"}\r\n              height={\"645px\"}\r\n              nodes={sdlc}\r\n              connectors={connections}\r\n              getNodeDefaults={(node: SdlcNodeModel) => {\r\n                //Sets the default values of a node\r\n                let obj: NodeModel = {};\r\n                obj.width = 100;\r\n                obj.height = 100;\r\n                obj.shape = { shape: \"Ellipse\" };\r\n                obj.style = { fill: \"#37909A\", strokeColor: \"#024249\" };\r\n                obj.annotations = [\r\n                  {\r\n                    content: node.text,\r\n                    margin: { left: 10, right: 10 },\r\n                    style: {\r\n                      color: \"white\",\r\n                      fill: \"none\",\r\n                      strokeColor: \"none\",\r\n                      bold: true\r\n                    }\r\n                  }\r\n                ];\r\n                return obj;\r\n              }}\r\n              getConnectorDefaults={(obj: ConnectorModel) => {\r\n                //Sets the default values of a Connector\r\n                obj.targetDecorator.style = {\r\n                  fill: \"#024249\",\r\n                  strokeColor: \"#024249\"\r\n                };\r\n                return { style: { strokeColor: \"#024249\", strokeWidth: 2 } };\r\n              }}\r\n              snapSettings={{ constraints: SnapConstraints.None }}\r\n            >\r\n              <Inject services={[UndoRedo]} />\r\n            </DiagramComponent>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"col-lg-4 property-section\"\r\n        >\r\n          <div className=\"property-panel-header\">Properties</div>\r\n          <div className=\"row property-panel-content\" id=\"appearance\">\r\n            <div className=\"row row-header\" style={{ paddingTop: \"8px\" }}>\r\n              Appearance\r\n            </div>\r\n            <div className=\"row\" style={{ paddingTop: \"3px\" }}>\r\n              <div\r\n                className=\"image-pattern-style\"\r\n                id=\"preview0\"\r\n                style={{\r\n                  backgroundImage: \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/node/Nodes_1.png')\",\r\n                  marginRight: \"3px\"\r\n                }}\r\n              />\r\n              <div\r\n                className=\"image-pattern-style\"\r\n                id=\"preview1\"\r\n                style={{\r\n                  backgroundImage: \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/node/Nodes_2.png')\",\r\n                  marginRight: \"0px 3px\"\r\n                }}\r\n              />\r\n              <div\r\n                className=\"image-pattern-style\"\r\n                id=\"preview2\"\r\n                style={{\r\n                  backgroundImage: \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/node/Nodes_3.png')\",\r\n                  margin: \"0px 3px\"\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"row\" style={{ paddingTop: \"3px\" }}>\r\n              <div\r\n                className=\"image-pattern-style\"\r\n                id=\"preview3\"\r\n                style={{\r\n                  backgroundImage: \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/node/Nodes_4.png')\",\r\n                  marginRight: \"3px\"\r\n                }}\r\n              />\r\n              <div\r\n                className=\"image-pattern-style\"\r\n                id=\"preview4\"\r\n                style={{\r\n                  backgroundImage: \"url('http://ej2.syncfusion.com/react/demos/src/diagram/Images/node/Nodes_5.png')\",\r\n                  margin: \"3px\"\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row property-panel-content\" style={{ paddingTop: \"10px\" }}>\r\n            <div className=\"row row-header\">Behavior</div>\r\n            <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n              {/* Enable or disable the AspectRatio for Node. */}\r\n              <CheckBoxComponent\r\n                checked={false}\r\n                label=\"Aspect ratio\"\r\n                id=\"aspectRatio\"\r\n                change={changed}\r\n              />\r\n            </div>\r\n            <div className=\"row\" style={{ paddingTop: \"8px\" }}>\r\n              {/* Enable or disable the Interaction for Node. */}\r\n              <CheckBoxComponent\r\n                checked={false}\r\n                label=\"Lock\"\r\n                id=\"lock\"\r\n                change={changed}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface SdlcNodeModel extends NodeModel {\r\n  text: string;\r\n}\r\n\r\n//Set customStyle for Node.\r\nfunction applyStyle( //it is in dedicated line here.\r\n  node: NodeModel,\r\n  width: number,\r\n  array: string,\r\n  con: NodeConstraints,\r\n  type: GradientType,\r\n  sh: ShadowModel,\r\n  target: HTMLElement\r\n): void {\r\n  node.style.fill = \"#37909A\";\r\n  node.style.strokeWidth = width;\r\n  node.style.strokeColor = \"#024249\";\r\n  node.style.strokeDashArray = array;\r\n  if (!type) {\r\n    node.style.gradient.type = \"None\";\r\n  } else {\r\n    let gradient: GradientModel | LinearGradientModel | RadialGradientModel;\r\n    gradient = {\r\n      cx: 50,\r\n      cy: 50,\r\n      fx: 50,\r\n      fy: 50,\r\n      stops: [\r\n        { color: \"#00555b\", offset: 0 },\r\n        { color: \"#37909A\", offset: 90 }\r\n      ],\r\n      type: \"Radial\"\r\n    };\r\n    node.style.gradient = gradient;\r\n  }\r\n  if (con & NodeConstraints.Shadow) {\r\n    node.shadow = { angle: 45, distance: 15, opacity: 0.3, color: \"grey\" };\r\n    node.constraints |= con;\r\n  } else {\r\n    node.constraints &= con;\r\n  }\r\n  diagramInstance.dataBind();\r\n  // custom code start\r\n  target.classList.add(\"e-selected-style\");\r\n  // custom code end\r\n}\r\n\r\n//Enable or disable the Constraints for Node.\r\nfunction changed(args: CheckBoxChangeEventArgs): void {\r\n  let element: HTMLInputElement = document.getElementById(\r\n    \"aspectRatio\"\r\n  ) as HTMLInputElement;\r\n  for (let i: number = 0; i < diagramInstance.nodes.length; i++) {\r\n    node = diagramInstance.nodes[i];\r\n    if ((args.event.target as HTMLElement).id === \"lock\") {\r\n      if (args.checked) {\r\n        node.constraints &= ~(\r\n          NodeConstraints.Resize |\r\n          NodeConstraints.Rotate |\r\n          NodeConstraints.Drag\r\n        );\r\n        node.constraints |= NodeConstraints.ReadOnly;\r\n      } else {\r\n        node.constraints |= NodeConstraints.Default & ~NodeConstraints.ReadOnly;\r\n      }\r\n    } else {\r\n      if (element.checked) {\r\n        node.constraints |= NodeConstraints.AspectRatio;\r\n      } else {\r\n        node.constraints &= ~NodeConstraints.AspectRatio;\r\n      }\r\n    }\r\n    diagramInstance.dataBind();\r\n  }\r\n}\r\n\nReactDOM.render(<GettingStartedNodes />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}