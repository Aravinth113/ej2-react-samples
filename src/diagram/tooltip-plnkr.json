{"index.css":"","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-spreadsheet\": \"syncfusion:ej2-spreadsheet/dist/ej2-spreadsheet.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-spreadsheet\": \"syncfusion:ej2-react-spreadsheet/dist/ej2-react-spreadsheet.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>{{:title}}</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"{{:meta}}\">    \r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link rel=\"shortcut icon\" href=\"https://ej2.syncfusion.com/home/favicon.ico\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link rel=\"canonical\" href=\"https://ej2.syncfusion.com/react/demos/{{:canonical}}\"/>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb  h1{\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n            margin: 0;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n        .layout {\r\n            display:inline-block;\r\n            cursor: pointer;\r\n        }\r\n        #actionDes {\r\n            opacity: 0.75;\r\n        }\r\n/*sb-icons declaration*/\r\n\r\n@font-face {\r\n    font-family: 'sbicons';\r\n      src: url(data:font/truetype;charset=utf-8;base64,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) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n.sb-icons {\r\n    font-family: 'sbicons';\r\n    speak: none;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-variant: normal;\r\n    text-transform: none;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.sb-icon-Next:before {\r\n    content: '\\e91b';\r\n}\r\n\r\n.sb-icon-Previous:before {\r\n    content: '\\e91f';\r\n}\r\n\r\n#next-sample,\r\n#prev-sample {\r\n    font-size: 18px;\r\n    border: 0.5px solid#E5E5E5;\r\n    background: #FFFFFF;\r\n    display: inline-table;\r\n    padding: 2px 5px 0px 5px;\r\n}\r\n\r\n.sb-navigation-next a, .sb-navigation-prev a{\r\n    color: #636363;\r\n    text-decoration: none;\r\n}\r\n\r\n#prev-sample {\r\n    border-radius: 4px 0px 0px 4px;\r\n}\r\n\r\n#next-sample {\r\n    border-radius: 0px 4px 4px 0px;\r\n    float: right;\r\n}\r\n\r\n#next-sample:hover,\r\n#prev-sample:hover{\r\nbackground-color: #D8D8D8;\r\ntext-decoration: none; \r\n}\r\n\r\n.sb-sample-navigation {\r\n    font-size: 18px;\r\n    color: #5a5a5a;\r\n    cursor: pointer;\r\n}\r\n\r\n.sb-custom-item {\r\n    padding-right: 15px;\r\n    padding-left: 30px;\r\n    display: inline-table;\r\n    padding-top: 20px;\r\n}\r\n\r\na.e-disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.35;\r\n}\r\n\r\n\r\n@media (max-width: 550px) {\r\n        \r\n        .sb-headers {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n        .sb-header {\r\n            display: none;\r\n        }\r\n        .syncfusion-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 8px;\r\n        }\r\n        .sync-logo {\r\n            padding-right: 0px;\r\n            padding-left: 8px;\r\n            background: url(../../styles/images/SyncfusionLogo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 40px;\r\n        }\r\n        .sb-icon-notification {\r\n            padding-left: 15px;\r\n            padding-right: 15px;\r\n            font-size: 18px;\r\n            transform: rotate(-180deg);\r\n            color: #5D5D5D;\r\n            opacity: 100%;\r\n        }\r\n        #sb-header-text {\r\n            padding-left: 0%;\r\n        }\r\n    \r\n        .sb-icon-notification:before {\r\n            content: \"\\ea08\";\r\n        }\r\n    \r\n        .product a:hover{\r\n        color: #5D5D5D;\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/react-ui-components/{{:header2}}\">PRODUCT TOUR</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/react\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div id='sample-header' class=\"sb-headers\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"syncfusion-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"sync-logo\"></div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <div class='sb-header-right sb-right sb-table'>\r\n                        <div class='sb-header-item sb-table-cell'>\r\n                            <div class=\"product\">\r\n                                <a href=\"https://www.syncfusion.com/react-ui-components/{{:header2}}\">\r\n                                <div class=\"sb-icon-notification sb-icons\"></div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n    \r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                            <div class=\"sb-custom-item sb-sample-navigation sb-right sb-header-right sb-table-cell\">\r\n                                <div id=\"prev-sample\" class=\"sb-navigation-prev e-control e-tooltip \" aria-label=\"previous sample\" title=\"Previous Sample\">\r\n                                    <a {{:anchor-prev}} class='{{:disabled-prev}}'><span class=\"sb-icons sb-icon-Previous\"></span></a>\r\n                            \r\n                                </div>\r\n                                <div id=\"next-sample\" class=\"sb-navigation-next e-control e-tooltip\" aria-label=\"next sample\" title=\"Next Sample\">\r\n                                    <a {{:anchor-next}} class='{{:disabled-next}}'><span class=\"sb-icons sb-icon-Next\"></span></a>\r\n                            \r\n                                </div>\r\n                            </div>\r\n                    <h1 class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos/\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/{{:header2}}/default.html\"><span>{{:header}}</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">{{:header1}}</div>\r\n                    </h1>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            <div class=\"layout\" id=\"actionDes\">{{:action-description}}</div>\r\n                            <a id=\"details\" class=\"layout\" onclick=\"desDetails()\"> More Details...</a>\r\n                            <script>\r\n                                function desDetails() {\r\n                                    var element = document.getElementById('description-section');\r\n                                    if (element) {\r\n                                        element.scrollIntoView();\r\n                                    }\r\n                                }\r\n                            </script>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           {{:description}}\r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <script src=\"./app/index.min.js\"></script>\r\n        <script src=\"../../{{:repoScript}}\"></script> \r\n\r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport {\r\n    DataBinding,\r\n    DiagramComponent,\r\n    SnapConstraints,\r\n    Inject,\r\n    DiagramConstraints,\r\n    ConnectorModel,\r\n    Diagram,\r\n    NodeModel,\r\n    NodeConstraints,\r\n    BpmnDiagrams\r\n} from '@syncfusion/ej2-react-diagrams';\r\nimport { SampleBase } from './sample-base';\r\nimport { NumericTextBoxComponent, TextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\n\r\n/**\r\n * Tooltip sample\r\n */\r\n\r\nconst SAMPLE_CSS = `#tooltipDiagramSection .image-pattern-style {\r\n    background-color: white;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    height: 75px;\r\n    width: calc((100% - 12px) / 3);\r\n    cursor: pointer;\r\n    border: 1px solid #D5D5D5;\r\n    background-position: center;\r\n    float: left;\r\n}\r\n\r\n#tooltipDiagramSection .image-pattern-style:hover {\r\n    border-color: gray;\r\n    border-width: 2px;\r\n}\r\n\r\n#tooltipDiagramSection .row {\r\n    margin-left: 0px;\r\n    margin-right: 0px;\r\n}\r\n\r\n#tooltipDiagramSection .row-header {\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n}\r\n\r\n#tooltipDiagramSection .e-selected-style {\r\n    border-color: #006CE6;\r\n    border-width: 2px;\r\n}\r\n\r\n#tooltipDiagramSection .e-checkbox-wrapper .e-label {\r\n    font-size: 12px;\r\n}\r\n.content-wrapper {\r\n    border: 1px solid #D7D7D7;\r\n}\r\n#tooltipPropertySection .property-panel-header {\r\n    margin-left: 10px;\r\n}`;\r\n\r\n// FontType Collection\r\nexport let modevalue: { [key: string]: Object }[] = [\r\n    { type: 'Object', text: 'Object' },\r\n    { type: 'Mouse', text: 'Mouse' },\r\n];\r\n\r\n// FontType Collection\r\nexport let PositionValue: { [key: string]: Object }[] = [\r\n    { type: 'TopLeft', text: 'TopLeft' },\r\n    { type: 'TopCenter', text: 'TopCenter' },\r\n    { type: 'TopRight', text: 'TopRight' },\r\n    { type: 'BottomLeft', text: 'BottomLeft' },\r\n    { type: 'BottomCenter', text: 'BottomCenter' },\r\n    { type: 'BottomRight', text: 'BottomRight' },\r\n    { type: 'LeftTop', text: 'LeftTop' },\r\n    { type: 'LeftCenter', text: 'LeftCenter' },\r\n    { type: 'LeftBottom', text: 'LeftBottom' },\r\n    { type: 'RightTop', text: 'RightTop' },\r\n    { type: 'RightCenter', text: 'RightCenter' },\r\n    { type: 'RightBottom', text: 'RightBottom' },\r\n];\r\n\r\n//FontType Collection\r\nexport let EffectValue: { [key: string]: Object }[] = [\r\n    { type: 'FadeIn', text: 'FadeIn' },\r\n    { type: 'FadeOut', text: 'FadeOut' },\r\n    { type: 'FadeZoomIn', text: 'FadeZoomIn' },\r\n    { type: 'FadeZoomOut', text: 'FadeZoomOut' },\r\n    { type: 'FlipXDownIn', text: 'FlipXDownIn' },\r\n    { type: 'FlipXDownOut', text: 'FlipXDownOut' },\r\n    { type: 'FlipXUpIn', text: 'FlipXUpIn' },\r\n    { type: 'FlipXUpOut', text: 'FlipXUpOut' },\r\n    { type: 'FlipYLeftIn', text: 'FlipYLeftIn' },\r\n    { type: 'FlipYLeftOut', text: 'FlipYLeftOut' },\r\n    { type: 'FlipYRightIn', text: 'FlipYRightIn' },\r\n    { type: 'FlipYRightOut', text: 'FlipYRightOut' },\r\n    { type: 'ZoomIn', text: 'ZoomIn' },\r\n    { type: 'ZoomOut', text: 'ZoomOut' },\r\n    { type: 'None', text: 'None' },\r\n];\r\n\r\nexport let contentValue: { [key: string]: Object }[] = [\r\n    { type: 'HTML Element', text: 'HTML Element' },\r\n    { type: 'Text', text: 'Text' },\r\n];\r\n\r\n\r\nlet diagramInstance: DiagramComponent;\r\nlet modeDropdown: DropDownListComponent;\r\nlet positionDropdown: DropDownListComponent;\r\nlet contentDropdown: DropDownListComponent;\r\nlet effectDropdown: DropDownListComponent;\r\n\r\nlet nodes: NodeModel[] = [\r\n    {\r\n        id: 'node1', width: 60, height: 60, offsetX: 35, offsetY: 120,\r\n        annotations: [{ content: 'Customer query', offset: { x: 0.5, y: 1 }, margin: { top: 15 } }],\r\n        tooltip: { content: 'Queries from the customer' },\r\n        shape: { type: 'Bpmn', shape: 'Event', event: { event: 'Start', trigger: 'Message' } }\r\n    },\r\n    {\r\n        id: 'node2', width: 75, height: 70, offsetX: 140, offsetY: 120,\r\n        annotations: [{ content: 'Enough details?', offset: { x: 0.50, y: 0.50 } }],\r\n        tooltip: { content: 'Whether the provided information is enough?' }, shape: { type: 'Bpmn', shape: 'Gateway' }\r\n    },\r\n    {\r\n        id: 'node3', width: 60, height: 50, offsetX: 270, offsetY: 120,\r\n        annotations: [{ content: 'Analyse', offset: { x: 0.50, y: 0.50 } }],\r\n        tooltip: { content: 'Analysing the query' },\r\n        shape: { type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task' } },\r\n    },\r\n    {\r\n        id: 'node4', width: 75, height: 70, offsetX: 370, offsetY: 120, shape: {\r\n            type: 'Bpmn', shape: 'Gateway',\r\n            gateway: { type: 'Exclusive' }\r\n        },\r\n        tooltip: { content: 'proceed to validate?' },\r\n    },\r\n    {\r\n        id: 'node5', width: 75, height: 70, offsetX: 570, offsetY: 120,\r\n        annotations: [{ content: 'Validate', offset: { x: 0.50, y: 0.50 } }],\r\n        tooltip: { content: 'Whether the reported/requested bug/feature is valid?' }, shape: { type: 'Bpmn', shape: 'Gateway' }\r\n    },\r\n    {\r\n        id: 'node6', width: 60, height: 60, offsetX: 720, offsetY: 120,\r\n        tooltip: { content: 'Send the invalid message to customer' },\r\n        shape: { type: 'Bpmn', shape: 'Event', event: { event: 'End', trigger: 'Message' } }\r\n    },\r\n    {\r\n        id: 'node7', width: 60, height: 50, offsetX: 140, offsetY: 280,\r\n        annotations: [{ content: 'Request', offset: { x: 0.50, y: 0.50 }, margin: { top: 5 } }],\r\n        tooltip: { content: 'Requesting for more information' },\r\n        shape: { type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task', task: { type: 'Send' } } }\r\n    },\r\n    {\r\n        id: 'node8', width: 60, height: 60, offsetX: 370, offsetY: 280,\r\n        tooltip: { content: 'Share the User Guide/Knowledge Base link' },\r\n        shape: { type: 'Bpmn', shape: 'Event', event: { event: 'Start', trigger: 'Message' } }\r\n    },\r\n    {\r\n        id: 'node9', width: 70, height: 50, offsetX: 570, offsetY: 280,\r\n        annotations: [{ content: 'Log bug/feature', offset: { x: 0.50, y: 0.50 } }], tooltip: { content: 'Log the bug/feature' },\r\n        shape: { type: 'Bpmn', shape: 'Activity', activity: { activity: 'Task' } }\r\n    },\r\n    {\r\n        id: 'node10', width: 75, height: 55, offsetX: 390, offsetY: 430,\r\n        annotations: [{ content: 'Implement', offset: { x: 0.50, y: 0.50 } }], tooltip: { content: 'Fix the bug/Add the feature' },\r\n        shape: {\r\n            type: 'Bpmn', shape: 'Activity', activity: {\r\n                activity: 'SubProcess', subProcess: {\r\n                    collapsed: false,\r\n                    events: [{ event: 'Intermediate', trigger: 'Timer', offset: { x: 0.5, y: 1 }, width: 25, height: 25 }]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: 'node12', width: 60, height: 60, offsetX: 265, offsetY: 430, tooltip: { content: 'Provide the solution' },\r\n        shape: { type: 'Bpmn', shape: 'Event', event: { event: 'End', trigger: 'Message' } }\r\n    },\r\n    {\r\n        id: 'node13', width: 60, height: 60, offsetX: 720, offsetY: 430, tooltip: { content: 'Share the task details' },\r\n        shape: { type: 'Bpmn', shape: 'Event', event: { event: 'End', trigger: 'Message' } }\r\n    },\r\n    {\r\n        id: 'node14', width: 60, height: 60, offsetX: 570, offsetY: 430, shape: {\r\n            type: 'Bpmn', shape: 'Gateway',\r\n            gateway: { type: 'Parallel' }\r\n        },\r\n        tooltip: { content: 'can log?' },\r\n    },\r\n];\r\n\r\n\r\nlet connectors: ConnectorModel[] = [\r\n    { id: 'connector1', sourceID: 'node1', targetID: 'node2' },\r\n    { id: 'connector2', sourceID: 'node2', targetID: 'node3' },\r\n    { id: 'connector3', sourceID: 'node3', targetID: 'node4' },\r\n    {\r\n        id: 'connector4', sourceID: 'node4', targetID: 'node5',\r\n        annotations: [{ content: 'Feature/Bug', offset: 0.5, style: { fill: 'white', textWrapping: 'Wrap' } }]\r\n    },\r\n    {\r\n        id: 'connector5', sourceID: 'node5', targetID: 'node6',\r\n        annotations: [{ content: 'Invalid', offset: 0.5, style: { fill: 'white' } }]\r\n    },\r\n    { id: 'connector6', sourceID: 'node2', targetID: 'node7' },\r\n    {\r\n        id: 'connector7', sourceID: 'node4', targetID: 'node8',\r\n        annotations: [{ content: 'How to?', offset: 0.5, style: { fill: 'white' } }]\r\n    },\r\n    { id: 'connector8', sourceID: 'node5', targetID: 'node9' },\r\n    { id: 'connector9', sourceID: 'node14', targetID: 'node13' },\r\n    {\r\n        id: 'connector10', sourceID: 'node7', targetID: 'node3', type: 'Orthogonal',\r\n        segments: [{ type: 'Orthogonal', length: 100, direction: 'Right' }, { type: 'Orthogonal', length: 100, direction: 'Top' }]\r\n    },\r\n    { id: 'connector11', sourceID: 'node14', targetID: 'node10' },\r\n    { id: 'connector12', sourceID: 'node10', targetID: 'node12' },\r\n    { id: 'connector13', sourceID: 'node9', targetID: 'node14' },\r\n];\r\nexport class Tooltip extends SampleBase<{}, {}> {\r\n    private fields: object = { text: 'text', value: 'type' };\r\n    rendereComplete() {\r\n        diagramInstance.fitToPage({ mode: 'Width' });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='control-pane'>\r\n                <div className='col-lg-8 control-section'>\r\n                    <style>{SAMPLE_CSS}</style>\r\n                    <div id=\"tooltipDiagramSection\" className=\"content-wrapper\" style={{ width: \"100%\" }}>\r\n                        <DiagramComponent\r\n                            id='diagram'\r\n                            ref={diagram => (diagramInstance = diagram)}\r\n                            width={'100%'}\r\n                            height={'645px'}\r\n                            nodes={nodes}\r\n                            connectors={connectors}\r\n                            snapSettings={{ constraints: SnapConstraints.None }}\r\n                            getConnectorDefaults={getConnectorDefaults}\r\n                            getNodeDefaults={getNodeDefaults}\r\n                            tooltip={{ content: getcontent(), position: 'TopLeft', relativeMode: 'Object', animation: { open: { effect: 'FadeZoomIn', delay: 0 }, close: { effect: 'FadeZoomOut', delay: 0 } } }}\r\n                        >\r\n                            <Inject services={[BpmnDiagrams]} />\r\n                        </DiagramComponent>\r\n                    </div>\r\n                </div>\r\n                <div id='tooltipPropertySection' className='col-lg-4 property-section'>\r\n                    <div className='property-panel-header' style={{ marginLeft: '0px' }}>Properties</div>\r\n                    <table id='property' title='Properties'>\r\n                        <tr>\r\n                            <td>\r\n                                <div>\r\n                                    Relative Mode\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div style={{ paddingLeft: \"15px\" }}>\r\n                                    <DropDownListComponent\r\n                                        id='mode'\r\n                                        ref={dropdown => (modeDropdown = dropdown)}\r\n                                        dataSource={modevalue}\r\n                                        fields={this.fields}\r\n                                        placeholder='select a mode value'\r\n                                        popupWidth='150'\r\n                                        width='100%'\r\n                                        index='0'\r\n                                        change={(args: any) => {\r\n                                            if (args.value === 'Mouse') {\r\n                                                diagramInstance.tooltip.relativeMode = 'Mouse';\r\n                                            } else {\r\n                                                diagramInstance.tooltip.relativeMode = 'Object';\r\n                                            }\r\n                                            diagramInstance.dataBind();\r\n                                        }}\r\n                                    >\r\n                                    </DropDownListComponent>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div>\r\n                                    Position\r\n                               </div>\r\n                            </td>\r\n                            <td>\r\n                                <div style={{ paddingLeft: \"15px\" }}>\r\n                                    <DropDownListComponent\r\n                                        id='position'\r\n                                        ref={dropdown => (positionDropdown = dropdown)}\r\n                                        dataSource={PositionValue}\r\n                                        fields={this.fields}\r\n                                        index='0'\r\n                                        placeholder='select a position'\r\n                                        popupWidth='150'\r\n                                        width='100%'\r\n                                        change={(args: any) => {\r\n                                            let nodes: NodeModel[] = diagramInstance.nodes;\r\n                                            for (let i: number = 0; i < nodes.length; i++) {\r\n                                                if (nodes[i].tooltip) {\r\n                                                    nodes[i].tooltip.position = args.value;\r\n                                                    diagramInstance.dataBind();\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                    </DropDownListComponent>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <div id='textContentDiv' className='row' style={{ display: 'none' }}>\r\n                                    <div>\r\n                                        <TextBoxComponent\r\n                                            id='textContent'\r\n                                            placeholder='Enter text content'\r\n                                            floatLabelType='Auto'\r\n                                            change={(args: any) => {\r\n                                                diagramInstance.tooltip.content = args.value.toString();\r\n                                                diagramInstance.dataBind();\r\n                                            }}\r\n                                        >\r\n                                        </TextBoxComponent>\r\n                                    </div>\r\n                                </div>\r\n                                <div id='htmlContentDiv' className='row' style={{ display: 'none' }}>\r\n                                    <div>\r\n                                        <TextBoxComponent\r\n                                            id='htmlContent'\r\n                                            placeholder='Enter html content'\r\n                                            floatLabelType='Auto'\r\n                                            change={(args: any) => {\r\n                                                let tooltipContent: HTMLDivElement = document.createElement('div');\r\n                                                let Description: any = args.value.toString();\r\n                                                tooltipContent.innerHTML = '<div style=\"background-color: #f4f4f4; color: black; border-width:1px;border-style: solid;border-color: #d3d3d3; border-radius: 8px;corner-radius:2px;white-space: nowrap;\"> <span style=\"margin: 10px;\"> ' + Description + ' </span>';\r\n                                                diagramInstance.tooltip.content = tooltipContent;\r\n                                                diagramInstance.dataBind();\r\n                                            }}\r\n                                        >\r\n                                        </TextBoxComponent>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div>\r\n                                    Animation\r\n                                </div>\r\n                            </td>\r\n                            <td style={{ paddingLeft: \"15px\" }}>\r\n                                <NumericTextBoxComponent\r\n                                    id='duration'\r\n                                    value={1000}\r\n                                    min={1000}\r\n                                    max={6000}\r\n                                    step={100}\r\n                                    change={(args: any) => {\r\n                                        diagramInstance.tooltip.animation.close.duration = args.value;\r\n                                        diagramInstance.tooltip.animation.open.duration = args.value;\r\n                                        diagramInstance.dataBind();\r\n                                    }}\r\n                                ></NumericTextBoxComponent>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div>\r\n                                    Effect\r\n                               </div>\r\n                            </td>\r\n                            <td>\r\n                                <div style={{ paddingLeft: \"15px\" }}>\r\n                                    <DropDownListComponent\r\n                                        id='effect'\r\n                                        ref={dropdown => (effectDropdown = dropdown)}\r\n                                        dataSource={EffectValue}\r\n                                        fields={this.fields}\r\n                                        placeholder='select a effect'\r\n                                        popupWidth='150'\r\n                                        width='100%'\r\n                                        index='0'\r\n                                        change={(args: any) => {\r\n                                            diagramInstance.tooltip.animation.open.effect = args.value;\r\n                                            diagramInstance.tooltip.animation.close.effect = args.value;\r\n                                            diagramInstance.dataBind();\r\n                                        }}\r\n                                    >\r\n                                    </DropDownListComponent>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction getConnectorDefaults(connector: ConnectorModel, diagram: Diagram): ConnectorModel {\r\n    connector.type = 'Orthogonal';\r\n    connector.style = { strokeWidth: 2 };\r\n    return connector;\r\n}\r\nfunction getNodeDefaults(obj: NodeModel): NodeModel {\r\n    obj.offsetX += 0.5;\r\n    obj.offsetY += 0.5;\r\n    obj.constraints = NodeConstraints.Default | NodeConstraints.Tooltip;\r\n    obj.style = { strokeWidth:2 };\r\n    return obj;\r\n}\r\nfunction getcontent(): HTMLElement {\r\n    let tooltipContent: HTMLElement = document.createElement('div');\r\n    tooltipContent.innerHTML = '<div style=\"background-color: #f4f4f4; color: black; border-width:1px;border-style: solid;border-color: #d3d3d3; border-radius: 8px;white-space: nowrap;\"> <span style=\"margin: 10px;\"> Tooltip !!! </span> </div>';\r\n    return tooltipContent;\r\n}\r\n\r\n\nReactDOM.render(<Tooltip />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}