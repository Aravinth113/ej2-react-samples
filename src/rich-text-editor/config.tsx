export const RichTextEditorSampleOrder: Object = [
    { 'path': 'rich-text-editor/tools', 'component': 'Overview','type': 'update', 'name': 'Overview', 'description': 'This demo shows the overview of an HTML and markdown editor using Syncfusion react rich text editor component.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","showCharCount","actionBegin","actionComplete","maxLength","appendTo"] }' },
    { 'path': 'rich-text-editor/rich-text-editor', 'component': 'Default', 'name': 'Default Functionalities', 'description': 'This demo for Syncfusion react component rich text editor component shows the default rendering with minimum configuration.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","appendTo"] }' },
    { 'path': 'rich-text-editor/image', 'component': 'ImageSample','type': 'update', 'name': 'Image', 'description': 'This demo for Syncfusion react rich text editor component shows the option to insert images to your content with image caption and link URLs to images.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","quickToolbarSettings","toolbarClick","appendTo","getRange"] }' },
    { 'path': 'rich-text-editor/inline', 'component': 'Inline', 'name': 'Inline', 'description': 'This demo Syncfusion react rich text editor component demonstrates on how to activate the editor on demand while editing the content.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","inlineMode","toolbarSettings","format","fontFamily","appendTo","dataBind"] }' },
    { 'path': 'rich-text-editor/paste-cleanup','type': 'update', 'component': 'PasteCleanupRTE', 'name': 'Paste from MS Word', 'order': '01', 'description': 'This demo shows the paste cleanup feature with API properties and methods in Syncfusion react rich text editor component.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","value","appendTo","pasteCleanupSettings"] }' },
    { 'path': 'rich-text-editor/iframe', 'component': 'IFrame', 'name': 'IFrame', 'description': 'This demo Syncfusion react rich text editor component demonstrates the default rendering of the RichTextEditor in iframe mode.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","height","iframeSettings","toolbarSettings","actionBegin","actionComplete","appendTo"] }' },
    { 'path': 'rich-text-editor/print', 'component': 'Print', 'name': 'Print', 'description': 'This demo for Syncfusion react rich text editor component shows how to print the content of the editor with its styles.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","print","appendTo"] }' },
    { 'path': 'rich-text-editor/ajax-load', 'component': 'AjaxContent', 'name': 'Ajax Content', 'description': 'This demo Syncfusion react rich text editor component demonstrates how to load content to the editor from an external source using Ajax library.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","value","appendTo"] }' },
    { 'path': 'rich-text-editor/resize-editor', 'component': 'ResizableEditor', 'name': 'Resizable Editor', 'type': 'new', 'order': '01', 'description': 'This demo for Syncfusion react rich text editor component shows how to resize the editor dynamically using the grip at the right bottom corner.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","appendTo","enableResize"] }' },
    { 'path': 'rich-text-editor/api', 'component': 'RTEApi', 'name': 'API', 'order': '01', 'description': 'This demo shows the usage of API properties and methods in Syncfusion react rich text editor component Syncfusion react rich text editor component.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","showCharCount","maxLength","appendTo","readonly","enabled","enableHtmlEncode","value","getSelection","selectAll"] }' },
    { 'path': 'rich-text-editor/client-side-events', 'component': 'RTEEvents','type': 'update', 'name': 'Events', 'description': 'This demo for Syncfusion react rich text editor component shows the events that have been triggered during the RichTextEditor operations.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","created","actionBegin","actionComplete","focus","blur","change","toolbarClick","appendTo"] }' },
    { 'path': 'rich-text-editor/blog-posting', 'component': 'Forums', 'name': 'Use Case', 'description': 'This demo for Syncfusion react rich text editor component demonstrates how to design forum application using RichTextEditor.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","placeholder","value","dataBind","refresh","appendTo"] }' },
    { 'path': 'rich-text-editor/auto-save', 'component': 'AutoSave','type':'new', 'name': 'Auto Save', 'description': 'This demo for Syncfusion react rich text editor component demonstrates RichTextEditor content will be automatically save every 10 seconds.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","placeholder","saveInterval","enablePersistance","toolbarSettings","appendTo"] }' },   
    { 'path': 'rich-text-editor/types', 'component': 'Type', 'name': 'Type', 'description': 'This demo for Syncfusion react rich text editor component demonstrates the different behavior of toolbar support in the RichTextEditor.', 'order': '02', 'category': 'Toolbar', 'api': '{"RichTextEditorComponent":["Inject","floatingToolbarOffset","toolbarSettings","actionBegin","actionComplete","dataBind","appendTo"] }' },
    { 'path': 'rich-text-editor/insert-emoticons', 'component': 'InsertEmoticons', 'name': 'Insert Emoticons', 'description': 'This demo for Syncfusion react rich text editor component shows the users to add their commands to the toolbar along with the built-in commands.', 'order': '03', 'category': 'Custom Tool', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","value","created","appendTo"] }' },
    { 'path': 'rich-text-editor/insert-special-characters', 'component': 'InsertSpecialCharacters', 'name': 'Insert Special Characters', 'description': 'This demo for Syncfusion react rich text editor component shows the users to add their commands to the toolbar along with the built-in commands.', 'order': '03', 'category': 'Custom Tool', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","value","created","appendTo"] }' },
    { 'path': 'rich-text-editor/markdown-editor', 'component': 'MarkDown', 'name': 'Overview','type': 'update', 'description': 'This demo for Syncfusion react rich text editor component shows the markdown editing in the RichTextEditor with complete features.', 'order': '04', 'category': 'Markdown Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","height","created","disableToolbarItem","enableToolbarItem","editorMode","appendTo"] }' },
    { 'path': 'rich-text-editor/markdown-editor-preview', 'component': 'Preview', 'name': 'Preview', 'description': 'This demo for Syncfusion react rich text editor component shows the users to switch between editing content and its visual preview in Markdown Editor.', 'order': '04', 'category': 'Markdown Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","height","created","disableToolbarItem","enableToolbarItem","editorMode","actionBegin","appendTo"] }' },
    { 'path': 'rich-text-editor/markdown-editor-custom-format', 'component': 'CustomFormat', 'name': 'Custom Format', 'description': 'This demo for Syncfusion react rich text editor component demonstrates on how to customize tags of markdown formatting in RichTextEditor.', 'order': '04', 'category': 'Markdown Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","height","created","disableToolbarItem","enableToolbarItem","editorMode","formatter","appendTo"] }' },
    { 'path': 'rich-text-editor/tribute', 'component': 'TributeJs', 'name': 'Tribute JS','type': 'new', 'description': 'This demo for Syncfusion react rich text editor component demonstrates on how to configure the third party library tribute.js', 'order': '05', 'category': 'Third-parties Integration', 'api': '{"RichTextEditorComponent":["created","placeholder"] }' }
]
