{"index.css":".template{\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n#edit_target #dialogBtn {\r\n    display: none;\r\n}\r\n\r\n#edit_target .dialog-text {\r\n    height: 35px;\r\n    border: 1px solid #80808029;\r\n    vertical-align: middle;\r\n    line-height: 35px;\r\n    border-radius: 4px;\r\n    padding-left: 12px;\r\n    margin-bottom: 5%;\r\n    cursor: pointer;\r\n}\r\n\r\n@media (max-width: 650px) {\r\n    #togglebtn{\r\n        display: none;\r\n    }\r\n}\r\n\r\n#edit_target .add-widget-button {\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n}\r\n\r\n#edit_dashboard.e-dashboardlayout.e-control .e-panel:hover span {\r\n    display: block;\r\n}\r\n\r\n#edit_dashboard.e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {\r\n    padding: 10px;\r\n    height: 35px;\r\n    margin: 0 15px 0 15px;\r\n    border-bottom: 2px solid #e6e9ed !important;\r\n}\r\n\r\n\r\n#edit_dashboard .e-panel-content {\r\n    height: calc(100% - 35px) !important;\r\n    overflow: hidden;\r\n    width:100%;\r\n}\r\n\r\n#edit_dashboard.e-dashboardlayout.e-control .e-panel,\r\n#edit_dashboard.e-dashboardlayout.e-control .e-panel:hover,\r\n#edit_dashboard.e-dashboardlayout.e-control .e-panel:active {\r\n    border: 1px solid #bbb;\r\n}\r\n\r\n#edit_target .e-dialog .e-dlg-header-content {\r\n    border-bottom: none;\r\n    padding: 18px 18px 18px 20px;\r\n}\r\n\r\n#edit_target .edit::before {\r\n    content: '\\e501';\r\n    font-family: 'e-sb-icons';\r\n    margin-left: -7px;\r\n    vertical-align: middle;\r\n}\r\n\r\n#edit_target .save::before {\r\n    content: '\\e500';\r\n    font-family: 'e-sb-icons';\r\n    margin-left: -7px;\r\n    vertical-align: middle;\r\n}\r\n/* custom code start*/\r\n@font-face {\r\n    font-family: 'e-sb-icons';\r\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMjttR/MAAAEoAAAAVmNtYXDlEOVaAAABjAAAADhnbHlmAM1kuQAAAcwAAAD8aGVhZBRipc8AAADQAAAANmhoZWEIUQQEAAAArAAAACRobXR4DAAAAAAAAYAAAAAMbG9jYQA6AH4AAAHEAAAACG1heHABEQA4AAABCAAAACBuYW1lWD3y/QAAAsgAAAIlcG9zdNvk7cwAAATwAAAANQABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAApr5cCV8PPPUACwQAAAAAANioMG8AAAAA2KgwbwAAAAAD9AP0AAAACAACAAAAAAAAAAEAAAADACwABAAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5QDlAQQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOUB//8AAOUA//8AAAABAAQAAAABAAIAAAAAADoAfgAEAAAAAAP0A/MAAwALABkAIwAAAREhEQEVMzUzFSE1IxEhETMVMxEjESERIxEjERUhESM1IzUhAx79xAEeR0j+m0gB9I9HR/02SEcD6EdI/KcBcf7iAR4CPI+P19f+4gEeSPzuAWb+mgNa/KZHA1lIRwAAAAMAAAAAA/QD9AADAAgAKwAACQEnCQEDJQEnNwcXPwc1Lw8PBgLH/ko2Abb9uT4BGQJC2m0/2z8HBgUFAwMCAQIEBQcICQoLDA0NDw8PEA0NDQwLCwsCkf5KNgG2/l7+5z4CQ9puP9s/CgsLCwwNDQ0QDw8PDQ0MCwoJCAcFBAIBAQEDAwUFBgAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAcAAQABAAAAAAACAAcACAABAAAAAAADAAcADwABAAAAAAAEAAcAFgABAAAAAAAFAAsAHQABAAAAAAAGAAcAKAABAAAAAAAKACwALwABAAAAAAALABIAWwADAAEECQAAAAIAbQADAAEECQABAA4AbwADAAEECQACAA4AfQADAAEECQADAA4AiwADAAEECQAEAA4AmQADAAEECQAFABYApwADAAEECQAGAA4AvQADAAEECQAKAFgAywADAAEECQALACQBIyBlai1pY29uUmVndWxhcmVqLWljb25lai1pY29uVmVyc2lvbiAxLjBlai1pY29uRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABlAGoALQBpAGMAbwBuAFIAZQBnAHUAbABhAHIAZQBqAC0AaQBjAG8AbgBlAGoALQBpAGMAbwBuAFYAZQByAHMAaQBvAG4AIAAxAC4AMABlAGoALQBpAGMAbwBuAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHNhdmUEZWRpdAAAAAAA) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n[class^=\"sf-icon-\"],\r\n[class*=\" sf-icon-\"] {\r\n    font-family: 'e-sb-icons' !important;\r\n    speak: none;\r\n    font-size: 55px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-variant: normal;\r\n    text-transform: none;\r\n    line-height: 1;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n/* custom code end*/\r\n#edit_dashboard{\r\n    display: block;\r\n}","systemjs.config.js":"System.config({\r\n    transpiler: \"ts\",\r\n    typescriptOptions: {\r\n            target: \"es5\",\r\n            module: \"commonjs\",\r\n            moduleResolution: \"node\",\r\n            emitDecoratorMetadata: true,\r\n            experimentalDecorators: true,\r\n            \"jsx\": \"react\"\r\n    },\r\n     meta: {\r\n      'typescript': {\r\n        \"exports\": \"ts\"\r\n      },\r\n      '*.json': { loader: 'plugin-json' }\r\n    },\r\n    paths: {\r\n        \"syncfusion:\": \"http://cdn.syncfusion.com/ej2/\"},\r\n    map: {\r\n        app: 'app',\r\n        ts: \"https://unpkg.com/plugin-typescript@4.0.10/lib/plugin.js\",\r\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\r\n        \"plugin-json\":\"https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js\",\r\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\r\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-splitbuttons\": \"syncfusion:ej2-splitbuttons/dist/ej2-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-maps\": \"syncfusion:ej2-maps/dist/ej2-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-treemap\": \"syncfusion:ej2-treemap/dist/ej2-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\r\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-schedule\": \"syncfusion:ej2-schedule/dist/ej2-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\r\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",        \r\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\",\r\n        \"@syncfusion/ej2-documenteditor\": \"syncfusion:ej2-documenteditor/dist/ej2-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-notifications\": \"syncfusion:ej2-notifications/dist/ej2-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-richtexteditor\": \"syncfusion:ej2-richtexteditor/dist/ej2-richtexteditor.umd.min.js\",\r\n\t\t\"@syncfusion/ej2-svg-base\": \"syncfusion:ej2-svg-base/dist/ej2-svg-base.umd.min.js\",\r\n        \"@syncfusion/ej2-pivotview\": \"syncfusion:ej2-pivotview/dist/ej2-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-heatmap\": \"syncfusion:ej2-heatmap/dist/ej2-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-spreadsheet\": \"syncfusion:ej2-spreadsheet/dist/ej2-spreadsheet.umd.min.js\",\r\n        \"@syncfusion/ej2-react-base\": \"syncfusion:ej2-react-base/dist/ej2-react-base.umd.min.js\",\r\n        \"@syncfusion/ej2-react-buttons\": \"syncfusion:ej2-react-buttons/dist/ej2-react-buttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-splitbuttons\": \"syncfusion:ej2-react-splitbuttons/dist/ej2-react-splitbuttons.umd.min.js\",\r\n        \"@syncfusion/ej2-react-charts\": \"syncfusion:ej2-react-charts/dist/ej2-react-charts.umd.min.js\",\r\n        \"@syncfusion/ej2-react-maps\": \"syncfusion:ej2-react-maps/dist/ej2-react-maps.umd.min.js\",\r\n        \"@syncfusion/ej2-react-treemap\": \"syncfusion:ej2-react-treemap/dist/ej2-react-treemap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-circulargauge\": \"syncfusion:ej2-react-circulargauge/dist/ej2-react-circulargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lineargauge\": \"syncfusion:ej2-react-lineargauge/dist/ej2-react-lineargauge.umd.min.js\",\r\n        \"@syncfusion/ej2-react-calendars\": \"syncfusion:ej2-react-calendars/dist/ej2-react-calendars.umd.min.js\",\r\n        \"@syncfusion/ej2-react-dropdowns\": \"syncfusion:ej2-react-dropdowns/dist/ej2-react-dropdowns.umd.min.js\",\r\n        \"@syncfusion/ej2-react-grids\": \"syncfusion:ej2-react-grids/dist/ej2-react-grids.umd.min.js\",\r\n        \"@syncfusion/ej2-react-inputs\": \"syncfusion:ej2-react-inputs/dist/ej2-react-inputs.umd.min.js\",\r\n        \"@syncfusion/ej2-react-lists\": \"syncfusion:ej2-react-lists/dist/ej2-react-lists.umd.min.js\",\r\n        \"@syncfusion/ej2-react-navigations\": \"syncfusion:ej2-react-navigations/dist/ej2-react-navigations.umd.min.js\",\r\n        \"@syncfusion/ej2-react-popups\": \"syncfusion:ej2-react-popups/dist/ej2-react-popups.umd.min.js\",\r\n        \"@syncfusion/ej2-react-schedule\": \"syncfusion:ej2-react-schedule/dist/ej2-react-schedule.umd.min.js\",\r\n        \"@syncfusion/ej2-react-documenteditor\": \"syncfusion:ej2-react-documenteditor/dist/ej2-react-documenteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-notifications\": \"syncfusion:ej2-react-notifications/dist/ej2-react-notifications.umd.min.js\",\r\n        \"@syncfusion/ej2-react-richtexteditor\": \"syncfusion:ej2-react-richtexteditor/dist/ej2-react-richtexteditor.umd.min.js\",\r\n        \"@syncfusion/ej2-react-pivotview\": \"syncfusion:ej2-react-pivotview/dist/ej2-react-pivotview.umd.min.js\",\r\n        \"@syncfusion/ej2-react-heatmap\": \"syncfusion:ej2-react-heatmap/dist/ej2-react-heatmap.umd.min.js\",\r\n        \"@syncfusion/ej2-react-spreadsheet\": \"syncfusion:ej2-react-spreadsheet/dist/ej2-react-spreadsheet.umd.min.js\",\r\n        \"react-dom\":\"https://unpkg.com/react-dom@15.5.4/dist/react-dom.min.js\",\r\n        \"react\":\"https://unpkg.com/react@15.5.4/dist/react.min.js\",\r\n    },\r\n    packages: {\r\n        'app': { main: 'index', defaultExtension: 'tsx' },\r\n    }\r\n});\r\n\r\nSystem.import('app');","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>{{:title}}</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"{{:meta}}\">    \r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link rel=\"shortcut icon\" href=\"https://ej2.syncfusion.com/home/favicon.ico\" />\r\n    <script type=\"text/javascript\">\r\n        var themeName = location.hash || 'material';\r\n        themeName = themeName.replace('#','');\r\n        window.ripple = (themeName === \"material\")\r\n        document.write('<link href=\"http://cdn.syncfusion.com/ej2/' + themeName + '.css\" rel=\"stylesheet\">');\r\n    </script>\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link rel=\"canonical\" href=\"https://ej2.syncfusion.com/react/demos/{{:canonical}}\"/>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\r\n    <link href=\"index.css\" rel=\"stylesheet\" />\r\n     <style>\r\n        #loader {\r\n            color: #008cff;\r\n            height: 40px;\r\n            left: 45%;\r\n            position: absolute;\r\n            top: 45%;\r\n            width: 30%;\r\n        }\r\n        body {\r\n            touch-action:none;\r\n        }\r\n        .body {\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n        }\r\n\r\n        .e-view {\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .sb-left {\r\n            float: left;\r\n        }\r\n\r\n        .sb-right {\r\n            float: right;\r\n        }\r\n\r\n        .sb-block {\r\n            display: block;\r\n        }\r\n\r\n        .sb-table {\r\n            display: table;\r\n        }\r\n\r\n        .sb-table-cell {\r\n            display: table-cell;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        /*sample header*/\r\n\r\n\r\n        .sb-header {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n\r\n\r\n        .sb-header-left, .sb-header-right {\r\n            height: 100%;\r\n        }\r\n\r\n        #sb-header-text {\r\n            padding-left: 22px;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        .header-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 22px;\r\n        }\r\n\r\n        .footer-logo {\r\n            background: url(https://ej2.syncfusion.com/home/images/footer-logo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 140px;\r\n        }\r\n\r\n        .sb-header-splitter {\r\n            float: left;\r\n            border-left: 1px solid rgb(196, 196, 196);\r\n            height: 32px;\r\n            margin-top: 8px;\r\n            padding-left: 22 px;\r\n        }\r\n\r\n        .sb-header-settings {\r\n            display: none;\r\n        }\r\n\r\n        .product-style a{\r\n        padding-right: 15px;\r\n        font-family:Roboto;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        color: #363636;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        }\r\n        .product-style a:hover {\r\n            color:#3C78EF;\r\n        }\r\n\r\n        .sb-download-btn a {\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-download-text {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-wrapper {\r\n            padding-right: 27px;\r\n        }\r\n\r\n        .sb-download-btn:hover .sb-download-btn:focus .sb-download-btn.active {\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\";\r\n            font-weight: bold;\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        .sb-download-btn:hover {\r\n            background: #006CE6;\r\n        }\r\n\r\n        .sb-download-btn:focus {\r\n            background: #0051CB;\r\n        }\r\n\r\n        .sb-download-btn.active {\r\n            background: #0036B1;\r\n        }\r\n\r\n        .sb-download-btn {\r\n            background-color: #3C78EF;\r\n            opacity: 100;\r\n            border-radius: 2px;\r\n            font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\r\n            font-weight: 500;\r\n            line-height: 18px;\r\n            height: 32px;\r\n            border-color: transparent;\r\n        }\r\n\r\n        .sb-bread-crumb  h1{\r\n            padding-left: 20px;\r\n            padding-top: 24px;\r\n            padding-bottom: 10px;\r\n            margin: 0;\r\n        }\r\n\r\n        .category-allcontrols a, .category-text a, .crumb-sample {\r\n            display: table;\r\n            opacity: 0.87;\r\n            font-family: Roboto;\r\n            font-weight: 500;\r\n            font-size: 15px;\r\n            color: #3C78EF;\r\n            text-align: left;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .sb-bread-crumb .sb-bread-crumb-text>div {\r\n            font-size: 15px;\r\n            font-weight: 500;\r\n            padding-right: 8px;\r\n            cursor: default;\r\n            display: table-cell;\r\n        }\r\n\r\n        .sb-bread-crumb-text>div.seperator {\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            vertical-align: bottom;\r\n        } \r\n\r\n        .content {\r\n        overflow: auto;\r\n        height: calc(100% - 50px);\r\n        top: 50px;\r\n        }\r\n\r\n\r\n        .sample-content {\r\n            top: 48px;\r\n            background: #FFFFFF;\r\n        }\r\n\r\n        .div {\r\n        display: block;\r\n        }\r\n\r\n        .control-section {\r\n            padding-left: 4px;\r\n        }\r\n\r\n        .crumb-sample {\r\n            color: #000000;\r\n            line-height: 18px;\r\n        }\r\n\r\n        #description {\r\n            padding-bottom: 16px;\r\n            padding-left: 20px;\r\n            opacity: 0.75;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n            padding-top: 14px;\r\n        }\r\n\r\n        #action-description {\r\n            padding-left: 20px;\r\n            padding-bottom: 15px;\r\n            font-family: Roboto;\r\n            font-size: 13px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n\r\n        #description-section {\r\n            padding-left: 20px;\r\n            padding-top: 30px;\r\n            opacity: 0.87;\r\n            font-family:Roboto;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            color: #000000;\r\n            text-align: left;\r\n        }\r\n        .layout {\r\n            display:inline-block;\r\n            cursor: pointer;\r\n        }\r\n        #actionDes {\r\n            opacity: 0.75;\r\n        }\r\n/*sb-icons declaration*/\r\n\r\n@font-face {\r\n    font-family: 'sbicons';\r\n      src: url(data:font/truetype;charset=utf-8;base64,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) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n.sb-icons {\r\n    font-family: 'sbicons';\r\n    speak: none;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-variant: normal;\r\n    text-transform: none;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.sb-icon-Next:before {\r\n    content: '\\e91b';\r\n}\r\n\r\n.sb-icon-Previous:before {\r\n    content: '\\e91f';\r\n}\r\n\r\n#next-sample,\r\n#prev-sample {\r\n    font-size: 18px;\r\n    border: 0.5px solid#E5E5E5;\r\n    background: #FFFFFF;\r\n    display: inline-table;\r\n    padding: 2px 5px 0px 5px;\r\n}\r\n\r\n.sb-navigation-next a, .sb-navigation-prev a{\r\n    color: #636363;\r\n    text-decoration: none;\r\n}\r\n\r\n#prev-sample {\r\n    border-radius: 4px 0px 0px 4px;\r\n}\r\n\r\n#next-sample {\r\n    border-radius: 0px 4px 4px 0px;\r\n    float: right;\r\n}\r\n\r\n#next-sample:hover,\r\n#prev-sample:hover{\r\nbackground-color: #D8D8D8;\r\ntext-decoration: none; \r\n}\r\n\r\n.sb-sample-navigation {\r\n    font-size: 18px;\r\n    color: #5a5a5a;\r\n    cursor: pointer;\r\n}\r\n\r\n.sb-custom-item {\r\n    padding-right: 15px;\r\n    padding-left: 30px;\r\n    display: inline-table;\r\n    padding-top: 20px;\r\n}\r\n\r\na.e-disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.35;\r\n}\r\n\r\n\r\n@media (max-width: 550px) {\r\n        \r\n        .sb-headers {\r\n            height: 48px;\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0,0,0,0.12);\r\n            z-index: 1001;\r\n            opacity: 100;\r\n        }\r\n        .sb-header {\r\n            display: none;\r\n        }\r\n        .syncfusion-logo {\r\n            float: left;\r\n            padding-left: 8px;\r\n            padding-right: 8px;\r\n        }\r\n        .sync-logo {\r\n            padding-right: 0px;\r\n            padding-left: 8px;\r\n            background: url(../../styles/images/SyncfusionLogo.svg) no-repeat right;\r\n            height: 40px;\r\n            width: 40px;\r\n        }\r\n        .sb-icon-notification {\r\n            padding-left: 15px;\r\n            padding-right: 15px;\r\n            font-size: 18px;\r\n            transform: rotate(-180deg);\r\n            color: #5D5D5D;\r\n            opacity: 100%;\r\n        }\r\n        #sb-header-text {\r\n            padding-left: 0%;\r\n        }\r\n    \r\n        .sb-icon-notification:before {\r\n            content: \"\\ea08\";\r\n        }\r\n    \r\n        .product a:hover{\r\n        color: #5D5D5D;\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\n    </style>\r\n</head>\r\n\r\n<body class='e-view ej2-new' aria-busy=\"true\">\r\n        <div class=\"sample-browser\">\r\n            <div id='sample-header' class=\"sb-header\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"header-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"footer-logo\"> </div>\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class=\"sb-header-splitter sb-download-splitter\"></div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n    \r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class='sb-header-right sb-right sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class='product-style'>\r\n                            <div><a href=\"https://www.syncfusion.com/react-ui-components/{{:header2}}\">PRODUCT TOUR</a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"sb-header-item sb-table-cell sb-download-wrapper\">\r\n                            <a href=\"https://www.syncfusion.com/downloads/react\" target=\"_blank\">\r\n                                <button id=\"download-now\" class=\"sb-download-btn\">\r\n                                    <span class=\"sb-download-text\">DOWNLOAD</span>\r\n                                </button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n            <div id='sample-header' class=\"sb-headers\" role=\"banner\">\r\n                <div class='sb-header-left sb-left sb-table'>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div class=\"syncfusion-logo\">\r\n                            <a href=\"https://ej2.syncfusion.com/home/react.html\" target=\"\" rel=\"noopener noreferrer\">\r\n                                <div class=\"sync-logo\"></div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class='sb-header-item sb-table-cell'>\r\n                        <div id='sb-header-text' class='e-sb-header-text'>\r\n                            <span class='sb-header-text-left'>Essential JS 2 for React</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <div class='sb-header-right sb-right sb-table'>\r\n                        <div class='sb-header-item sb-table-cell'>\r\n                            <div class=\"product\">\r\n                                <a href=\"https://www.syncfusion.com/react-ui-components/{{:header2}}\">\r\n                                <div class=\"sb-icon-notification sb-icons\"></div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n    \r\n            <div class ='content e-view'>\r\n            <div class='sample-content'>\r\n                <div id=\"sample-bread-crumb\" class=\"sb-bread-crumb\">\r\n                            <div class=\"sb-custom-item sb-sample-navigation sb-right sb-header-right sb-table-cell\">\r\n                                <div id=\"prev-sample\" class=\"sb-navigation-prev e-control e-tooltip \" aria-label=\"previous sample\" title=\"Previous Sample\">\r\n                                    <a {{:anchor-prev}} class='{{:disabled-prev}}'><span class=\"sb-icons sb-icon-Previous\"></span></a>\r\n                            \r\n                                </div>\r\n                                <div id=\"next-sample\" class=\"sb-navigation-next e-control e-tooltip\" aria-label=\"next sample\" title=\"Next Sample\">\r\n                                    <a {{:anchor-next}} class='{{:disabled-next}}'><span class=\"sb-icons sb-icon-Next\"></span></a>\r\n                            \r\n                                </div>\r\n                            </div>\r\n                    <h1 class=\"sb-bread-crumb-text\">\r\n                        <div class=\"category-allcontrols\"><a href=\"https://ej2.syncfusion.com/react/demos/\"><span>All Controls</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"category-text bread-ctext\"><a href=\"https://ej2.syncfusion.com/react/demos/#/material/{{:header2}}/default.html\"><span>{{:header}}</span></a></div>\r\n                        <div class=\"category-seperator sb-icons\"> / </div>\r\n                        <div class=\"crumb-sample\">{{:header1}}</div>\r\n                    </h1>\r\n                </div>\r\n                <div class=\"control-content\">\r\n                <div id=\"action-description\">\r\n                        <p>\r\n                            <div class=\"layout\" id=\"actionDes\">{{:action-description}}</div>\r\n                            <a id=\"details\" class=\"layout\" onclick=\"desDetails()\"> More Details...</a>\r\n                            <script>\r\n                                function desDetails() {\r\n                                    var element = document.getElementById('description-section');\r\n                                    if (element) {\r\n                                        element.scrollIntoView();\r\n                                    }\r\n                                }\r\n                            </script>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"control-section\">\r\n                            <div id='sample'>\r\n                                <div id='loader'>Loading....</div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                    <div id=\"description-section\">Description</div>    \r\n                    <div id=\"description\">\r\n                        <p>\r\n                           {{:description}}\r\n                         </p>     \r\n                    </div>    \r\n                </div>             \r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <script src=\"./app/index.min.js\"></script>\r\n        <script src=\"../../{{:repoScript}}\"></script> \r\n\r\n</body>\r\n</html>\r\n","app/index.tsx":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport { SampleBase } from './sample-base';\r\nimport { DashboardLayoutComponent, PanelModel, PanelsDirective, PanelDirective, ResizeArgs } from \"@syncfusion/ej2-react-layouts\";\r\nimport { ButtonComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport {\r\n    AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective,\r\n    Inject, AccumulationLegend, PieSeries, AccumulationTooltip,ColumnSeries, SeriesCollectionDirective, SeriesDirective,\r\n    AccumulationDataLabel, ChartComponent, Legend, Category, Tooltip,  DataLabel, SplineAreaSeries, DateTime,\r\n  } from \"@syncfusion/ej2-react-charts\";\r\n\r\n\r\n\r\nexport class DynamicWidget extends SampleBase<{}, {hideDialog: boolean;}> {\r\n\r\n    public btnobj: ButtonComponent;\r\n    public dashboardObj: DashboardLayoutComponent;\r\n    public dialogObj: DialogComponent;\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            hideDialog : false\r\n        };\r\n    }\r\n    btnClick(): void {\r\n        if (this.btnobj.element.classList.contains('e-active')) {\r\n            this.dashboardObj.allowDragging = true;\r\n            this.dashboardObj.allowResizing = true;\r\n            this.btnobj.content = \"Save\";\r\n            this.btnobj.iconCss = 'save';\r\n            document.getElementById('dialogBtn').style.display = 'block';\r\n        }else {\r\n            this.dashboardObj.allowDragging = false;\r\n            this.dashboardObj.allowResizing = false;\r\n            this.btnobj.content = \"Edit\";\r\n            this.btnobj.iconCss = 'edit';\r\n            document.getElementById('dialogBtn').style.display = 'none';\r\n        }\r\n    }\r\n    onPanelResize(args: ResizeArgs): void {\r\n        if (args.element && args.element.querySelector('.e-panel-container .e-panel-content div div')) {\r\n            let chartObj: any = ((args.element.querySelector('.e-panel-container .e-panel-content div div')) as any).ej2_instances[0];\r\n            chartObj.height = '95%';\r\n            chartObj.width = '100%';\r\n            chartObj.refresh();\r\n        }\r\n    }\r\n    public content(data: any): JSX.Element {\r\n        return (\r\n            <div id=\"dialogcontent\">\r\n                <div>\r\n                    <div id=\"linetemplate\" >\r\n                        <p className=\"dialog-text\">Linechart (1x1) </p>\r\n                    </div>\r\n                    <div id=\"pietemplate\" >\r\n                        <p className=\"dialog-text\">Piechart (1x1) </p>\r\n                    </div>\r\n                    <div id=\"splinetemplate\" >\r\n                        <p className=\"dialog-text\">Splinechart (2x1) </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    private count: number = 4;\r\n    public onAdd(): void {\r\n        let proxy: any = this;\r\n        let panel: PanelModel[] = [{\r\n            \"id\": this.count.toString() + \"_layout\", \"sizeX\": 2, \"sizeY\": 2, \"row\": 0, \"col\": 0,\r\n            header: \"<div>Panel\" + this.count.toString() + \"</div>\", content: \"<div></div>\"\r\n        }];\r\n        this.count = this.count + 1;\r\n        proxy.dashboardObj.addPanel(panel[0]);\r\n    }\r\n\r\n    public splineTemplate(): JSX.Element{\r\n        let splineData1: object[] = [\r\n            { x: new Date(2002, 0, 1), y: 2.2 }, { x: new Date(2003, 0, 1), y: 3.4 },\r\n            { x: new Date(2004, 0, 1), y: 2.8 }, { x: new Date(2005, 0, 1), y: 1.6 },\r\n            { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 2.5 },\r\n            { x: new Date(2008, 0, 1), y: 2.9 }, { x: new Date(2009, 0, 1), y: 3.8 },\r\n            { x: new Date(2010, 0, 1), y: 1.4 }, { x: new Date(2011, 0, 1), y: 3.1 }\r\n        ];\r\n\r\n        let splineData2: object[] = [\r\n            { x: new Date(2002, 0, 1), y: 2 }, { x: new Date(2003, 0, 1), y: 1.7 },\r\n            { x: new Date(2004, 0, 1), y: 1.8 }, { x: new Date(2005, 0, 1), y: 2.1 },\r\n            { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 1.7 },\r\n            { x: new Date(2008, 0, 1), y: 1.5 }, { x: new Date(2009, 0, 1), y: 2.8 },\r\n            { x: new Date(2010, 0, 1), y: 1.5 }, { x: new Date(2011, 0, 1), y: 2.3 }\r\n        ];\r\n        return(\r\n        <div className=\"template\" >\r\n            <ChartComponent style={{ \"height\":\"100%\", \"width\":\"100%\", textAlign: \"center\" }}\r\n                        primaryXAxis={{\r\n                            valueType: 'DateTime',\r\n                            labelFormat: 'MMM',\r\n                            majorGridLines: { width: 0 },\r\n                            intervalType: 'Months',\r\n                            edgeLabelPlacement: 'Shift'\r\n                        }}\r\n                        primaryYAxis={{\r\n                            labelFormat: '{value}%',\r\n                            lineStyle: { width: 0 },\r\n                            maximum: 4, interval: 1,\r\n                            majorTickLines: { width: 0 },\r\n                            minorTickLines: { width: 0 }\r\n                        }}\r\n                        chartArea={{ border: { width: 0 } }}>\r\n                        <Inject services={[SplineAreaSeries, DateTime, Legend]} />\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={splineData1} xName='x' yName='y' name='Jan'\r\n                                opacity={0.5} type='SplineArea' width={2} fill='rgb(239, 183, 202)'>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={splineData2} xName='x' yName='y' name='Feb'\r\n                                opacity={0.5} type='SplineArea' width={2}  fill='rgb(0, 189, 174)'>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public lineTemplate(): JSX.Element{\r\n        let data1: any[] = [{ x: 'Jan', y: 46 }, { x: 'Feb', y: 27 }, { x: 'Mar', y: 26 }];\r\n        let data2: any[] = [{ x: 'Jan', y: 37 }, { x: 'Feb', y: 23 }, { x: 'Mar', y: 18 }];\r\n        let data3: any[] = [{ x: 'Jan', y: 38 }, { x: 'Feb', y: 17 }, { x: 'Mar', y: 26 }];\r\n        return(\r\n        <div className=\"template\" >\r\n             <ChartComponent style={{\"height\":\"100%\", \"width\":\"100%\"}}\r\n                        primaryXAxis={{ valueType: 'Category', interval: 1, majorGridLines: { width: 0 } }}\r\n                        primaryYAxis={{\r\n                            majorGridLines: { width: 0 },\r\n                            majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' }\r\n                        }}\r\n                        chartArea={{ border: { width: 0 } }}\r\n                        tooltip={{ enable: true }}>\r\n                        <Inject services={[ColumnSeries, Legend, Tooltip, Category, DataLabel]} />\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data1} xName='x' yName='y' name='Jan' type='Column'\r\n                                marker={{ dataLabel: { visible: false }}} fill = '#00bdae'>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={data2} xName='x' yName='y' name='Feb' type='Column'\r\n                                marker={{ dataLabel: { visible: false }}} fill = '#e56691'>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={data3} xName='x' yName='y' name='Mar' type='Column'\r\n                                marker={{ dataLabel: { visible: false }}} fill = '#357cd2'>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public pieTemplate(): JSX.Element{\r\n        let pieData: object[] = [\r\n            { \"x\": \"Jan\", y: 12.5, text: \"January\" },\r\n            { \"x\": \"Feb\", y: 25, text: \"February\" },\r\n            { \"x\": \"Mar\", y: 50, text: \"March\" },\r\n        ];\r\n        let piePalette: string[] = [\"#00bdaed1\", \"#357cd2bf\", \"#e56691e8\"];\r\n        return(\r\n        <div className=\"template\" >\r\n            <AccumulationChartComponent style={{\"height\":\"100%\", \"width\":\"100%\"}}\r\n              legendSettings={{ visible: false }}\r\n              enableSmartLabels={true}\r\n              enableAnimation={true}\r\n              center={{x: '50%', y: '50%'}}\r\n              \r\n              tooltip={{enable: true, header: '<b>${point.x}</b>', format: 'Composition : <b>${point.y}%</b>' }}>\r\n              <Inject services={[AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel]} />\r\n              <AccumulationSeriesCollectionDirective>\r\n                <AccumulationSeriesDirective dataSource={pieData} name='Earnings' xName='x' yName='y'\r\n                  dataLabel={{ visible: true, position: 'Inside', name: 'value', font: { fontWeight: '600' }}}\r\n                  radius='100%' innerRadius=\"40%\" palettes ={ ['#00bdae', '#357cd2', '#e56691']}>\r\n                </AccumulationSeriesDirective>\r\n              </AccumulationSeriesCollectionDirective>\r\n            </AccumulationChartComponent>\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n    private cellSpacing: number [] = [10, 10];\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <div id='edit_target' className=\"control-section\">\r\n                <div>\r\n                    <div style={{\"width\":\"100%\" , \"height\": \"30px\"}}>\r\n                        <ButtonComponent  cssClass='e-outline e-flat e-primary' ref={(scope) => { this.btnobj = scope; }} iconCss='edit' \r\n                            isToggle={true} onClick={ this.btnClick.bind(this) } style={{\"float\":\"right\", \"width\": \"75px\"}}>\r\n                            Edit\r\n                        </ButtonComponent>\r\n                    </div>\r\n                    <div style={{\"padding\":\"5px\", \"text-align\": \"end\"}}>\r\n                        <div id=\"dialogBtn\" className=\"add-widget-button e-control e-btn e-lib\" onClick={ this.dlgClick.bind(this) }>\r\n                            Add New Widget\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DashboardLayoutComponent id=\"edit_dashboard\" columns={2} cellSpacing={this.cellSpacing} ref={(scope) => { this.dashboardObj = scope; }} \r\n                 resizeStop={ this.onPanelResize.bind(this) } allowResizing={false} allowDragging={false}>\r\n                <PanelsDirective>\r\n                    <PanelDirective sizeX={1} sizeY={1} row={0} col={0} content={this.lineTemplate as any} header=\"<div>Line Chart</div>\"></PanelDirective>\r\n                    <PanelDirective sizeX={1} sizeY={1} row={0} col={1} content={this.pieTemplate as any} header=\"<div>Pie Chart</div>\"></PanelDirective>\r\n                    <PanelDirective sizeX={2} sizeY={1} row={1} col={0} content={this.splineTemplate as any} header=\"<div>Spline Chart</div>\"></PanelDirective>\r\n                </PanelsDirective>\r\n                </DashboardLayoutComponent>\r\n                </div>\r\n                <DialogComponent id=\"listdialog\" width=\"500px\" height=\"260px\" visible={this.state.hideDialog} header={\"Add a widget\"} showCloseIcon={true}\r\n                animationSettings={{effect:'Zoom'}} isModal={true} target='#edit_target' ref={(scope) => { this.dialogObj = scope; }} content= {this.content as any}>\r\n                </DialogComponent>\r\n            </div>\r\n);\r\n    }\r\n    dlgClick(): void {\r\n        this.setState({ hideDialog: true });\r\n        document.getElementById('linetemplate').onclick = () => {\r\n            let countValue: string = this.count.toString();\r\n            let panel: PanelModel[] = [{\r\n                'id': '_layout' + countValue, 'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 0,\r\n                header: '<div>Line Chart</div>', content: this.lineTemplate as any\r\n            }];\r\n            this.count = this.count + 1;\r\n            this.dashboardObj.addPanel(panel[0]);\r\n            this.setState({ hideDialog:false });\r\n        };\r\n        document.getElementById('pietemplate').onclick = () => {\r\n            let countValue: string = this.count.toString();\r\n            let panel: PanelModel[] = [{\r\n                'id': '_layout' + countValue, 'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 0,\r\n                header: '<div>Pie Chart</div>', content: this.pieTemplate as any\r\n            }];\r\n            this.count = this.count + 1;\r\n            this.dashboardObj.addPanel(panel[0]);\r\n            this.setState({ hideDialog:false });\r\n        };\r\n        document.getElementById('splinetemplate').onclick = () => {\r\n            let countValue: string = this.count.toString();\r\n            let panel: PanelModel[] = [{\r\n                'id': '_layout' + countValue, 'sizeX': 2, 'sizeY': 1, 'row': 0, 'col': 0,\r\n                header: '<div>Spline Chart</div>', content: this.splineTemplate as any\r\n            }];\r\n            this.count = this.count + 1;\r\n            this.dashboardObj.addPanel(panel[0]);\r\n            this.setState({ hideDialog: false });\r\n        };\r\n    }\r\n\r\n    \r\n}\nReactDOM.render(<DynamicWidget />, document.getElementById('sample'));","app/sample-base.tsx":"import * as ReactDOM from 'react-dom';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\n\r\nenableRipple((window as any).ripple);\r\nexport class SampleBase<P, S> extends React.PureComponent<RouteComponentProps<any> & P, S>{\r\n    public rendereComplete(): void {\r\n        /**custom render complete function */\r\n    }\r\n    componentDidMount(): void {\r\n        setTimeout(() => {\r\n            this.rendereComplete();\r\n        }\r\n        );\r\n    }\r\n}"}